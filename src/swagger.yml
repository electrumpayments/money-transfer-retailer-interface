---
swagger: "2.0"
info:
  description: |
    The Electrum Money Transfer Service Interface is an API designed to enable retailers to integrate with multiple counter-to-counter money transfer service providers via a single interface.

    The basic procedure by which a counter-to-counter money transfer occurs is as follows:
    1. A customer wishing to send money to a recipient registers a profile with the service provider.
    2. The sender creates an order by making a cash payment at one of the retailer's points of sale (POS). The payment is linked to a unique payout reference generated by the service provider and a sender-selected PIN.
    3. The sender supplies the recipient with the payout reference and PIN.
    4. The recipient redeems the order at another POS by supplying the payout reference and PIN.

    This API defines a RESTful interface that supports the following functionality:
    * Creation and querying of customer profiles.
    * Order creation (a dual message pair transaction consisting of an online payment authorization followed a store-and-forward confirmation or reversal).
    * Order lookup.
    * Order redemption. (a dual message pair transaction consisting of an online redeem authorization followed by a store-and-forward confirmation or reversal).

    Note that because of the requirements of different service providers, some fields that are optional according to this specification may be mandatory for certain providers. For guidelines on how to implement this API, please contact both Electrum and the relevant service provider(s).
  version: 1.0.2
  title: Money Transfer Service Interface
  contact:
    name: Electrum Support
    url: http://io.electrum
    email: support@electrum.co.za
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: www.example.com
basePath: /moneytransfer/v1
schemes:
- https
paths:
  /admin/customers:
    get:
      description: Returns information of the customer's profile as registered on the service providers system.
      operationId: getCustomerInfo
      parameters:
        - name: idNumber
          in: query
          description: National identity number of the customer.
          required: true
          type: string
        - name: merchantId
          in: query
          description: The assigned merchant identifier. Also known as card acceptor id.
          required: false
          type: string
        - name: originatorInstId
          in: query
          description: Identifies the institution from which the transaction originates. Value to be assigned by Electrum.
          required: false
          type: string
        - name: receiverId
          in: query
          description: Identifies the service provider to whom this request must be directed.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MoneyTransferAdminMessage'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorDetail'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorDetail'
        501:
          description: Not implemented
          schema:
            $ref: '#/definitions/ErrorDetail'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorDetail'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorDetail'
      security:
      - httpBasic: []
    post:
      description: Request to create a new or update an existing customer profile on the service provider's system.
      operationId: createOrUpdateCustomer
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: A message containing the data required to carry out the admin request, as well as information about the point-of-sale from which the transaction originates.
        required: true
        schema:
          $ref: '#/definitions/MoneyTransferAdminMessage'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/MoneyTransferAdminMessage'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorDetail'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorDetail'
        501:
          description: Not implemented
          schema:
            $ref: '#/definitions/ErrorDetail'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorDetail'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorDetail'
      security:
      - httpBasic: []
  /orders:
    post:
      description: Requests that an order be created for the specified payment amount. The request is treated as an online financial authorization message. If the client calling this resource does not receive a response, then a `reversePayment` call must be made to the `/orders/reversals` resource to ensure the transaction is cancelled with no financial impact.
      operationId: createOrder
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: A message containing the data required to carry out the payment order, as well as information about the point-of-sale from which the transaction originates.
        required: true
        schema:
          $ref: '#/definitions/MoneyTransferAuthRequest'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/MoneyTransferAuthResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorDetail'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorDetail'
        501:
          description: Not implemented
          schema:
            $ref: '#/definitions/ErrorDetail'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorDetail'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorDetail'
      security:
      - httpBasic: []
    get:
      description: Queries the details of an existing money transfer order.
      operationId: lookupOrder
      produces:
      - application/json
      parameters:
        - name: orderRedeemRef
          in: query
          description: Reference used by the recipient to redeem the order.
          required: true
          type: string
        - name: merchantId
          in: query
          description: The assigned merchant identifier. Also known as card acceptor id.
          required: false
          type: string
        - name: originatorInstId
          in: query
          description: Identifies the institution from which the transaction originates. Value to be assigned by Electrum.
          required: false
          type: string
        - name: receiverId
          in: query
          description: Identifies the service provider to whom this request must be directed.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MoneyTransferLookupResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorDetail'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorDetail'
        501:
          description: Not implemented
          schema:
            $ref: '#/definitions/ErrorDetail'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorDetail'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorDetail'
      security:
      - httpBasic: []
  /orders/confirmations:
    post:
      description: Advises that a money transfer payment has been made successfully. This is treated as a store-and-forward transaction. Upon receipt, the Electrum service will respond immediately to acknowledge receipt and place the message on a queue for guaranteed delivery to the service provider. If the service provider does not support positive advice messages, then this is simply stored for reporting purposes.
      operationId: confirmPayment
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: A payment confirmation.
        required: true
        schema:
          $ref: '#/definitions/MoneyTransferConfirmation'
      responses:
        202:
          description: Accepted
          schema:
            $ref: '#/definitions/MoneyTransferConfirmation'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorDetail'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorDetail'
        501:
          description: Not implemented
          schema:
            $ref: '#/definitions/ErrorDetail'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorDetail'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorDetail'
      security:
      - httpBasic: []
  /orders/reversals:
    post:
      description: Requests that a money transfer payment be reversed. This is treated as a store-and-forward transaction. Upon receipt, the Electrum service will respond immediately to acknowledge receipt and place the message on a queue for guaranteed delivery to the service provider.
      operationId: reversePayment
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: A payment reversal.
        required: true
        schema:
          $ref: '#/definitions/MoneyTransferReversal'
      responses:
        202:
          description: Accepted
          schema:
            $ref: '#/definitions/MoneyTransferReversal'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorDetail'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorDetail'
        501:
          description: Not implemented
          schema:
            $ref: '#/definitions/ErrorDetail'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorDetail'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorDetail'
      security:
      - httpBasic: []
  /orders/redemptions:
    post:
      description: Requests that an existing order be paid out to the recipient. The request is treated as an online financial authorization message. If the client calling this resource does not receive a response, then a `reverseRedeem` call must be made to the `/orders/redemptions/reversals` resource to ensure the transaction is cancelled with no financial impact.
      operationId: redeemOrder
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: A message containing the data required to redeem the order, as well as information about the point-of-sale from which the transaction originates.
        required: true
        schema:
          $ref: '#/definitions/MoneyTransferRedeemRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MoneyTransferRedeemResponse'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorDetail'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorDetail'
        501:
          description: Not implemented
          schema:
            $ref: '#/definitions/ErrorDetail'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorDetail'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorDetail'
      security:
      - httpBasic: []
  /orders/redemptions/confirmations:
    post:
      description: Advises that a money transfer order has been successfully redeemed. This is treated as a store-and-forward transaction. Upon receipt, the Electrum service will respond immediately to acknowledge receipt and place the message on a queue for guaranteed delivery to the service provider. If the service provider does not support positive advice messages, then this is simply stored for reporting purposes.
      operationId: confirmRedeem
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: A redemption confirmation.
        required: true
        schema:
          $ref: '#/definitions/MoneyTransferConfirmation'
      responses:
        202:
          description: Accepted
          schema:
            $ref: '#/definitions/MoneyTransferConfirmation'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorDetail'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorDetail'
        501:
          description: Not implemented
          schema:
            $ref: '#/definitions/ErrorDetail'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorDetail'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorDetail'
      security:
      - httpBasic: []
  /orders/redemptions/reversals:
    post:
      description: Requests that a money transfer redemption be reversed. This is treated as a store-and-forward transaction. Upon receipt, the Electrum service will respond immediately to acknowledge receipt and place the message on a queue for guaranteed delivery to the service provider.
      operationId: reverseRedeem
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: A redemption reversal.
        required: true
        schema:
          $ref: '#/definitions/MoneyTransferReversal'
      responses:
        202:
          description: Accepted
          schema:
            $ref: '#/definitions/MoneyTransferReversal'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorDetail'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorDetail'
        501:
          description: Not implemented
          schema:
            $ref: '#/definitions/ErrorDetail'
        503:
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorDetail'
        504:
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorDetail'
      security:
      - httpBasic: []
securityDefinitions:
  httpBasic:
    description: All requests require HTTP basic authentication, where user name is the value used in `client.id` of the request and password has been agreed with Electrum.
    type: basic
definitions:
  Address:
    description: Details of a customer's address
    type: object
    properties:
      addressLine1:
        description: First line of street address.
        type: string
      addressLine2:
        description: Second line of street address (if required).
        type: string
      city:
        type: string
      province:
        type: string
      country:
        description: Nationality expressed as an ISO Alpha-2 country code
        minLength: 2
        maxLength: 2
      postCode:
        type: string
  ErrorDetail:
    description: Represents the outcome of an unsuccessful transaction.
    type: object
    required:
    - errorMessage
    - errorType
    - id
    properties:
      errorType:
        type: string
        description: The type of error that occurred
        enum:
        - TRANSACTION_NOT_ALLOWED_FOR_MERCHANT
        - ALREADY_REDEEMED
        - PIN_RETRIES_EXCEEDED
        - INCORRECT_PIN
        - UNABLE_TO_REDEEM
        - INVALID_REDEEM_REF
        - DAILY_LIMIT_EXCEEDED
        - MONTHLY_LIMIT_EXCEEDED
        - PROVIDER_SYSTEM_ERROR
        - CUSTOMER_CHECK_FAILED
        - DUPLICATE_RECORD
        - FORMAT_ERROR
        - SYSTEM_ERROR
        - TRANSACTION_DECLINED
        - INVALID_AMOUNT
        - ROUTING_ERROR
        - TRANSACTION_NOT_SUPPORTED
        - UNABLE_TO_LOCATE_RECORD
        - UPSTREAM_UNAVAILABLE
        - AUTHENTICATION_ERROR
      errorMessage:
        type: string
        description: A description of the error
        minLength: 0
        maxLength: 80
      id:
        type: string
        description: The UUID of the message for which the error occurred.
      originalId:
        type: string
        description: The UUID of the original request message in the case of an error occurring for an advice message.
      detailMessage:
        type: object
        description: A free form detailed description of a particular failure condition may optionally be supplied.
      providerErrorCode:
        type: string
        description: The error code returned by the service provider. Note that this should be used for informational purposes only. Messages displayed on the POS should make use of errorType and errorMessage to ensure a consistent set of responses.
      providerErrorMessage:
        type: string
        description: The error message returned by the service provider. Note that this should be used for informational purposes only. Messages displayed on the POS should make use of errorType and errorMessage to ensure a consistent set of responses.
  Institution:
    description: Originating, acquiring, processing, or receiving institution details.
    type: object
    required:
    - id
    - name
    properties:
      id:
        type: string
        description: The institution's id as assigned by Electrum
        pattern: "[0-9]{1,11}"
      name:
        type: string
        description: The institution's name
        minLength: 0
        maxLength: 40
  LedgerAmount:
    description: An amount object containing value and currency, and optionally an indicator of DEBIT/CREDIT
    type: object
    required:
    - amount
    - currency
    properties:
      amount:
        type: integer
        format: int64
        description: Amount in minor denomination, e.g. R799.95 is encoded as 79995
      currency:
        type: string
        description: Three digit currency number from ISO 4217, e.g. South African Rand is encoded as 710
        pattern: "[0-9]{3}"
      ledgerIndicator:
        type: string
        description: Indicates whether this amount is a debit or a credit. Only required when the amount can be either a debit or a credit
        enum:
        - DEBIT
        - CREDIT
  Merchant:
    description: Merchant related data.
    type: object
    required:
    - merchantId
    - merchantName
    - merchantType
    properties:
      merchantType:
        type: string
        description: The assigned four digit merchant category code
        pattern: "[0-9]{4}"
      merchantId:
        type: string
        description: The assigned merchant identifier. Also known as card acceptor id
        minLength: 15
        maxLength: 15
      merchantName:
        $ref: '#/definitions/MerchantName'
  MerchantName:
    description: Represents the merchant name and location.
    type: object
    required:
    - city
    - country
    - name
    - region
    properties:
      name:
        type: string
        description: The merchant or trading as name associated with the merchant
        minLength: 0
        maxLength: 23
      city:
        type: string
        description: The city where the merchant is located
        minLength: 0
        maxLength: 13
      region:
        type: string
        description: The state or region where the merchant is located
        minLength: 0
        maxLength: 2
      country:
        type: string
        description: The country where the merchant is located
        minLength: 0
        maxLength: 2
  MoneyTransferAdminMessage:
    description: Used to transfer data in calls to the /admin/customers resource.
    type: object
    required:
    - customerDetails
    properties:
      originator:
        $ref: '#/definitions/Originator'
      receiver:
        $ref: '#/definitions/Institution'
      customerDetails:
        $ref: '#/definitions/PersonalDetails'
  MoneyTransferAuthRequest:
    description: Used to submit data in a call to the createOrder operation.
    type: object
    required:
    - id
    - amount
    - client
    - originator
    - receiver
    - thirdPartyIdentifiers
    - time
    - senderDetails
    - recipientDetails
    - pinBlock
    properties:
      id:
        type: string
        description: The randomly generated UUID identifying this transaction, as defined for a variant 4 UUID in [RFC 4122](https://tools.ietf.org/html/rfc4122)
      amount:
        $ref: '#/definitions/LedgerAmount'
      time:
        type: string
        format: date-time
        description: The date and time of the message as recorded by the sender. The format shall be as defined for date-time in [RFC 3339 section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6). It is recommended that the optional time-secfrac be included up to millisecond precision
      originator:
        $ref: '#/definitions/Originator'
      client:
        $ref: '#/definitions/Institution'
      thirdPartyIdentifiers:
        type: array
        description: An array of identifiers which each identify the transaction within each entity's system.
        items:
          $ref: '#/definitions/ThirdPartyIdentifier'
      basketRef:
        type: string
        description: Used to group multiple transactions which would otherwise be considered independent.
      receiver:
        $ref: '#/definitions/Institution'
      settlementEntity:
        $ref: '#/definitions/Institution'
      slipData:
        $ref: "#/definitions/SlipData"
      senderDetails:
        $ref: '#/definitions/PersonalDetails'
      recipientDetails:
        $ref: '#/definitions/PersonalDetails'
      pinBlock:
        type: string
        pattern: "[a-fA-F0-9]{16}"
        description: Hexadecimal string representing the encrypted PIN to be used by the recipient to redeem the order.
  MoneyTransferAuthResponse:
    description: Contains the data returned by a call to the createOrder operation.
    type: object
    required:
    - id
    - amount
    - client
    - originator
    - receiver
    - thirdPartyIdentifiers
    - time
    - senderDetails
    - orderRedeemRef
    properties:
      id:
        type: string
        description: The randomly generated UUID identifying this transaction, as defined for a variant 4 UUID in [RFC 4122](https://tools.ietf.org/html/rfc4122)
      amount:
        $ref: '#/definitions/LedgerAmount'
      time:
        type: string
        format: date-time
        description: The date and time of the message as recorded by the sender. The format shall be as defined for date-time in [RFC 3339 section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6). It is recommended that the optional time-secfrac be included up to millisecond precision
      originator:
        $ref: '#/definitions/Originator'
      client:
        $ref: '#/definitions/Institution'
      thirdPartyIdentifiers:
        type: array
        description: An array of identifiers which each identify the transaction within each entity's system.
        items:
          $ref: '#/definitions/ThirdPartyIdentifier'
      basketRef:
        type: string
        description: Used to group multiple transactions which would otherwise be considered independent.
      receiver:
        $ref: '#/definitions/Institution'
      settlementEntity:
        $ref: '#/definitions/Institution'
      slipData:
        $ref: "#/definitions/SlipData"
      senderDetails:
        $ref: '#/definitions/PersonalDetails'
      orderRedeemRef:
        type: string
        description: Reference used by the recipient to redeem the order. This must be printed on the receipt.
      orderId:
        type: string
        description: Reference used by the service provider to uniquely identify the money transfer order on their system. This field can be used if the provider supplies a supplementary reference for the order in addition to the orderRedeemRef. Note that any reference issued by the provider that is specific to a particular leg of the order process should be set as a ThirdPartyIdentifier (i.e. the authorization and redeem legs of the order should each have its own reference).
  MoneyTransferLookupResponse:
    description: Contains the data returned by a call to the lookupOrder operation.
    type: object
    required:
    - amount
    - originator
    - receiver
    properties:
      amount:
        $ref: '#/definitions/LedgerAmount'
      status:
        type: string
        description: The status of the order
        enum:
        - UNREDEEMED
        - REDEEMED
        - CANCELLED
      originator:
        $ref: '#/definitions/Originator'
      receiver:
        $ref: '#/definitions/Institution'
  MoneyTransferRedeemRequest:
    description: Used to submit data in a call to the redeemOrder operation.
    type: object
    required:
    - id
    - client
    - originator
    - receiver
    - thirdPartyIdentifiers
    - time
    - pinBlock
    - orderRedeemRef
    properties:
      id:
        type: string
        description: The randomly generated UUID identifying this transaction, as defined for a variant 4 UUID in [RFC 4122](https://tools.ietf.org/html/rfc4122)
      amount:
        $ref: '#/definitions/LedgerAmount'
      time:
        type: string
        format: date-time
        description: The date and time of the message as recorded by the sender. The format shall be as defined for date-time in [RFC 3339 section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6) It is recommended that the optional time-secfrac be included up to millisecond precision
      originator:
        $ref: '#/definitions/Originator'
      client:
        $ref: '#/definitions/Institution'
      thirdPartyIdentifiers:
        type: array
        description: An array of identifiers which each identify the transaction within each entity's system.
        items:
          $ref: '#/definitions/ThirdPartyIdentifier'
      basketRef:
        type: string
        description: Used to group multiple transactions which would otherwise be considered independent.
      receiver:
        $ref: '#/definitions/Institution'
      settlementEntity:
        $ref: '#/definitions/Institution'
      slipData:
        $ref: "#/definitions/SlipData"
      pinBlock:
        type: string
        pattern: "[a-fA-F0-9]{16}"
        description: Hexadecimal string representing the encrypted PIN to be used by the recipient to redeem the order.
      orderRedeemRef:
        type: string
        description: Reference used by the recipient to redeem the order.
  MoneyTransferConfirmation:
    description: An advice that notifies of the positive completion of a transaction.
    type: object
    required:
    - id
    - requestId
    - thirdPartyIdentifiers
    - time
    properties:
      id:
        type: string
        description: The randomly generated UUID identifying this advice, as defined for a variant 4 UUID in [RFC 4122](https://tools.ietf.org/html/rfc4122).
      requestId:
        type: string
        description: The UUID identifying the request that this advice relates to.
      time:
        type: string
        format: date-time
        description: The date and time of the message as recorded by the sender. The format shall be as defined for date-time in [RFC 3339 section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6). It is recommended that the optional time-secfrac be included up to millisecond precision.
      thirdPartyIdentifiers:
        type: array
        description: The unaltered thirdPartyIdentifiers array as supplied in the response message of the request to be reversed. Required if thirdPartyIdentifiers field was present in the response. If no thirdPartyIdentifiers was received in the response or no response was received then this should be set to the thirdPartyIdentifiers sent in the original request.
        items:
          $ref: '#/definitions/ThirdPartyIdentifier'
  MoneyTransferRedeemResponse:
    description: Contains the data returned by a call to the redeemOrder operation.
    type: object
    required:
    - id
    - amount
    - client
    - originator
    - receiver
    - thirdPartyIdentifiers
    - time
    properties:
      id:
        type: string
        description: The randomly generated UUID identifying this transaction, as defined for a variant 4 UUID in [RFC 4122](https://tools.ietf.org/html/rfc4122)
      amount:
        $ref: '#/definitions/LedgerAmount'
      time:
        type: string
        format: date-time
        description: The date and time of the message as recorded by the sender. The format shall be as defined for date-time in [RFC 3339 section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6). It is recommended that the optional time-secfrac be included up to millisecond precision
      originator:
        $ref: '#/definitions/Originator'
      client:
        $ref: '#/definitions/Institution'
      thirdPartyIdentifiers:
        type: array
        description: An array of identifiers which each identify the transaction within each entity's system.
        items:
          $ref: '#/definitions/ThirdPartyIdentifier'
      basketRef:
        type: string
        description: Used to group multiple transactions which would otherwise be considered independent.
      receiver:
        $ref: '#/definitions/Institution'
      settlementEntity:
        $ref: '#/definitions/Institution'
      slipData:
        $ref: "#/definitions/SlipData"
      orderId:
        type: string
        description: Reference used by the service provider to uniquely identify the money transfer order on their system. This field can be used if the provider supplies a supplementary reference for the order in addition to the orderRedeemRef. Note that any reference issued by the provider that is specific to a particular leg of the order process should be set as a ThirdPartyIdentifier (i.e. the authorization and redeem legs of the order should each have its own reference).
  MoneyTransferReversal:
    description: An advice that notifies that the outcome of an authorisation transaction be reversed. This can be either due to cashier cancellation, or upstream timeout.
    type: object
    required:
    - id
    - requestId
    - reversalReason
    - thirdPartyIdentifiers
    - time
    properties:
      id:
        type: string
        description: The randomly generated UUID identifying this advice, as defined for a variant 4 UUID in [RFC 4122](https://tools.ietf.org/html/rfc4122)
      requestId:
        type: string
        description: The UUID identifying the request that this advice relates to.
      time:
        type: string
        format: date-time
        description: The date and time of the message as recorded by the sender. The format shall be as defined for date-time in [RFC 3339 section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6). It is recommended that the optional time-secfrac be included up to millisecond precision
      thirdPartyIdentifiers:
        type: array
        description: The unaltered thirdPartyIdentifiers array as supplied in the response message of the request to be reversed. Required if thirdPartyIdentifiers field was present in the response. If no thirdPartyIdentifiers was received in the response or no response was received then this should be set to the thirdPartyIdentifiers sent in the original request.
        items:
          $ref: '#/definitions/ThirdPartyIdentifier'
      reversalReason:
        type: string
        description: The reason for the reversal
        enum:
        - TIMEOUT
        - CANCELLED
        - RESPONSE_NOT_FINAL
  Originator:
    description: The Originator object encapsulates data relating to the originator of the transaction.
    type: object
    required:
    - institution
    - merchant
    - terminalId
    properties:
      institution:
        $ref: '#/definitions/Institution'
      terminalId:
        type: string
        description: The ID that uniquely identifies each device or system in an originator's institution capable of sending requests. Required for transactions initiated from physical card entry or point-of-sale devices.
        minLength: 8
        maxLength: 8
      merchant:
        $ref: "#/definitions/Merchant"
  PersonalDetails:
    description: Pesonal details of a customer.
    type: object
    properties:
      firstName:
        type: string
        description: The person's first name(s)
      lastName:
        type: string
        description: The person's last name
      address:
        $ref: '#/definitions/Address'
      idNumber:
        type: string
        description: The person's ID Number
      idType:
        type: string
        description: Type of identification document
      nationality:
        type: string
        description: Nationality expressed as an ISO Alpha-2 country code
        minLength: 2
        maxLength: 2
      dateOfBirth:
        type: string
        description: Date of birth
      contactNumber:
        type: string
        description: Mobile phone number of the customer to which the outcome of a transaction can be communicated. This must conform to the ITU E.164 numbering plan (https://www.itu.int/rec/T-REC-E.164/en).
        pattern: '^\+?[1-9]\d{1,14}'
      altContactHome:
        type: string
        description: An alternative home contact number. This must conform to the ITU E.164 numbering plan (https://www.itu.int/rec/T-REC-E.164/en).
        pattern: '^\+?[1-9]\d{1,14}'
      altContactWork:
        type: string
        description: An alternative work contact number. This must conform to the ITU E.164 numbering plan (https://www.itu.int/rec/T-REC-E.164/en).
        pattern: '^\+?[1-9]\d{1,14}'
      email:
        type: string
        format: email
        description: The person's email address
  SlipData:
    description: Data that may be printed on the customer slip for information purposes.
    type: object
    properties:
      messageLines:
        type: array
        description: An array of text lines and optional formatting to be printed on the customer slip.
        items:
          $ref: '#/definitions/SlipLine'
      slipWidth:
        type: integer
        format: int32
        description: The width of the slip in normal (unformatted) characters.
      issuerReference:
        type: string
        description: An identifier that is printed on the customer slip and uniquely identifies the payment on the service provider's system. This value is used by the customer to request a refund when the service supports this function, and it is thus important that this number is unique.
        pattern: "[A-Z0-9]{1,40}"
  SlipLine:
    description: A line of text to be printed on the till slip.
    type: object
    required:
    - text
    properties:
      text:
        type: string
        description: Text contained on the line
      fontWidthScaleFactor:
        type: number
        format: double
        description: Scale factor for font width. Assume 1.0 (i.e. normal size) if not present.
      fontHeightScaleFactor:
        type: number
        format: double
        description: Scale factor for font height. Assume 1.0 (i.e. normal size) if not present.
      line:
        type: boolean
        description: Denotes a solid line on the slip. Assume false if not present.
        default: false
      cut:
        type: boolean
        description: Indicates the slip should be cut at this line. Assume false if not present.
        default: false
  ThirdPartyIdentifier:
    description: An identifier assigned by an entity which process the message. Identifiers are keyed by institution ID thereby enabling any institution to recall a transaction within the entity's own system using the entity's own identifier. Entity's must not alter the identifier set by another entity. Once an identifier has been set by an entity, all other entity's must send that identifier in subsequent messages.
    type: object
    required:
    - institutionId
    - transactionIdentifier
    properties:
      institutionId:
        type: string
        description: The entity's institution's ID as assigned by Electrum.
        pattern: "[0-9]{1,11}"
      transactionIdentifier:
        type: string
        description: The identifier assigned to this transaction by the institution represented in institutionId. This value should be unique within the institution's system.

