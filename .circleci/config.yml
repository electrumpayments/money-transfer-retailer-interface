version: 2
jobs:
  build:
    working_directory: ~/capitec-ussd
    environment:
      TZ: "/usr/share/zoneinfo/Africa/Johannesburg"
    docker:
      - image: circleci/openjdk:8-jdk
    branches:
      only:
        - /.*/
    steps:
      - checkout

      #- setup_remote_docker
      #- run: echo 127.0.0.1 dockerhost | sudo tee -a /etc/hosts

      - restore_cache:
          key: capitec-ussd-{{ checksum "pom.xml" }}

      - run:
          # Install Dependencies
          name: Install dependencies
          command: |
            echo 'No dependencies needed'

      - run:
          # copy some utilities over from github
          name: Copy utilities from github
          command: |
            git clone git@github.com:electrumpayments/circlecitools.git ~/circlecitools
            chmod +x ~/circlecitools/bin/*.sh

      - run:
          # a custom maven settings file ensures we can talk to our artifactory
          name: Copy custom maven file
          command: |
            if [ -f ~/.m2 ]; then rm ~/.m2; fi;
            mkdir -p ~/.m2
            cp ~/circlecitools/config/maven/settings.xml ~/.m2/settings.xml

      - run:
          # setup our git account
          name: Setup Git Account
          command: |
            git config --global user.email "circleci@electrum.co.za"
            git config --global user.name "Another Electrum Robot"

      - run:
          # Resolve dependencies and go offline before building
          name: Maven Resolve Dependencies And Go Offline
          command: |
            mvn -fn dependency:resolve dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: capitec-ussd-{{ checksum "pom.xml" }}

      - run:
          # run mvn integration-test
          name: Integration tests
          command: |
            ~/circlecitools/bin/mavenTest.sh

      - run:
          # generate code coverage report
          name: Generate Code Coverage Report
          command: |
            mkdir -p ~/tmp/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/tmp/junit/ \;

      - run:
          # release to artifactory
          name: Release to artifactory
          command: |
            ~/circlecitools/bin/releaseJavaSource.sh

      - run:
          # commit the release artifacts and create a tag for the release
          name: Commit And Tag Binaries
          command: |
            sudo apt-get install rpm
            mvn install -PpackageStandaloneRpm
            ~/circlecitools/bin/commitAndTagBinaries.sh
